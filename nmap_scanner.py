#!/usr/bin/python3

import nmap

scanner = nmap.PortScanner()   # instantiate the object
print("Welcome to nmap automation tool")

ip_addr = input("IP address to be scanned: ")
port_range = input("(Range of) ports to be scanned, endpoints separated by dash: ")
scan_type = input(
    "Type of scan to run:\n1) SYN ACK\n2) UDP\n3) Comprehensive\n"
)

print("Nmap version:", scanner.nmap_version())

if scan_type == '1':
    scanner.scan(
        ip_addr,
        port_range,   # range of ports to scan
        '-v -sS'    # verbose, simple SYN/ACK
    )
    print(scanner.scaninfo())   # info about the scan in json, specific to scan_type chosen
    print(ip_addr, "'s status:", scanner[ip_addr].state())
    print("protocols enabled:", scanner[ip_addr].all_protocols())
    print("open TCP ports:", scanner[ip_addr]['tcp'].keys())   # KeyError if protocols empty

elif scan_type == '2':
    scanner.scan(
        ip_addr,
        port_range,
        '-v -sU'    # verbose, simple UDP
    )
    print(scanner.scaninfo())   # info about the scan in json, specific to scan_type chosen
    print(ip_addr, "'s status:", scanner[ip_addr].state())
    print("protocols enabled:", scanner[ip_addr].all_protocols())
    print("open UDP ports:", scanner[ip_addr]['udp'].keys())

elif scan_type == '3':
    scanner.scan(
        ip_addr,
        port_range,
        '-v -sS -sV -sC -A -O'    # verbose, simple TCP, service fingerprinting, default script, aggressive, OS info
    )
    print(scanner.scaninfo())   # Error
    print(ip_addr, "'s status:", scanner[ip_addr].state())
    print("protocols enabled:", scanner[ip_addr].all_protocols())
    print("open TCP ports:", scanner[ip_addr]['tcp'].keys())   # KeyError if protocols empty

elif scan_type >= '4':
    print("option invalid")
